{"version":3,"sources":["components/GoodsList/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","getAll","fetch","then","response","json","get5First","a","res","length","getRedGoods","filter","App","state","loadGoods","func","setState","type","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8SAsBeA,EAfoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjC,8BACE,oBAAIC,UAAU,cAAd,SACGD,EAAME,KAAI,SAACC,GAAD,OACT,oBACEF,UAAU,cACVG,MAAO,CAAEC,MAAOF,EAAKE,OAFvB,SAIGF,EAAKG,eCZT,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACLN,IADK,cACjBO,EADiB,QAGnBC,OAAS,EAHU,kBAKhBD,GALgB,2CAAH,qDAQTE,EAAW,uCAAG,4BAAAH,EAAA,sEACPN,IADO,cACnBO,EADmB,yBAGlBA,EAAIG,QAAO,SAACd,GACjB,MAAmB,QAAfA,EAAKE,UAJc,2CAAH,qDCFlBa,E,4MACJC,MAAe,CACbnB,MAAO,I,EAGToB,U,uCAAY,WAAOC,GAAP,eAAAR,EAAA,sEACQQ,IADR,OACJP,EADI,OAGV,EAAKQ,SAAS,CACZtB,MAAOc,IAJC,2C,kGAQZ,WAAU,IAAD,OACP,OACE,gCACE,oBAAIb,UAAU,QAAd,mCACA,sBAAKA,UAAU,UAAf,UACE,wBACEsB,KAAK,SACLtB,UAAU,iBACVuB,QAAS,WACP,EAAKJ,UAAUb,IAJnB,4BASA,wBACEgB,KAAK,SACLtB,UAAU,iBACVuB,QAAS,WACP,EAAKJ,UAAUR,IAJnB,gCASA,wBACEW,KAAK,SACLtB,UAAU,iBACVuB,QAAS,WACP,EAAKJ,UAAUJ,IAJnB,+BAUF,cAAC,EAAD,CAAWhB,MAAOyB,KAAKN,MAAMnB,e,GA9CnB0B,IAAMC,WAoDTT,IC/DfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.77622b75.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Goods = {\n  goods: Good[],\n};\n\nconst GoodsList: React.FC<Goods> = ({ goods }) => (\n  <div>\n    <ul className=\"goods__list\">\n      {goods.map((good) => (\n        <li\n          className=\"goods__item\"\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default GoodsList;\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const res = await getAll();\n\n  res.length = 5;\n\n  return res;\n};\n\nexport const getRedGoods = async () => {\n  const res = await getAll();\n\n  return res.filter((good) => {\n    if (good.color === 'red') {\n      return true;\n    }\n\n    return false;\n  });\n};\n","import React from 'react';\nimport './App.scss';\nimport GoodsList from './components/GoodsList/GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\ntype State = {\n  goods: Good[]\n};\n\ntype GetGoodsCallback = () => Promise<Good[]>;\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [],\n  };\n\n  loadGoods = async (func: GetGoodsCallback) => {\n    const res = await func();\n\n    this.setState({\n      goods: res,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">Dynamic list of Goods</h1>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-link\"\n            onClick={() => {\n              this.loadGoods(getAll);\n            }}\n          >\n            Load All goods\n          </button>\n          <button\n            type=\"button\"\n            className=\"button is-link\"\n            onClick={() => {\n              this.loadGoods(get5First);\n            }}\n          >\n            Load 5 first goods\n          </button>\n          <button\n            type=\"button\"\n            className=\"button is-link\"\n            onClick={() => {\n              this.loadGoods(getRedGoods);\n            }}\n          >\n            Load red goods\n          </button>\n        </div>\n        <GoodsList goods={this.state.goods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}